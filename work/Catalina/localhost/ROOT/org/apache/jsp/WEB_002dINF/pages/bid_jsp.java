/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2023-12-15 14:21:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bid_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"utf-8\" />\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("        <meta name=\"description\" content=\"\" />\r\n");
      out.write("        <meta name=\"author\" content=\"\" />\r\n");
      out.write("        <title>Shop Item</title>\r\n");
      out.write("        <!-- Favicon-->\r\n");
      out.write("        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/favicon.ico\" />\r\n");
      out.write("        <!-- Bootstrap icons-->\r\n");
      out.write("        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\" rel=\"stylesheet\" />\r\n");
      out.write("                <link rel=\"stylesheet\" type=\"text/css\" href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.getContextPath()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/bootstrap/5.1.3/css/bootstrap.min.css' />\r\n");
      out.write("                <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.getContextPath()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/bootstrap/5.1.3/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("        <!-- Core theme CSS (includes Bootstrap)-->\r\n");
      out.write("        <link href=\"../resources/css/item.css\" rel=\"stylesheet\" />\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("           <header>\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "include/header.jsp", out, false);
      out.write("\r\n");
      out.write("           </header>\r\n");
      out.write("        <!-- Product section-->\r\n");
      out.write("    <section class=\"py-5\">|\r\n");
      out.write("        <c:forEach items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${products}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" var=\"product\">\r\n");
      out.write("            <div class=\"container px-4 px-lg-5 my-5\">\r\n");
      out.write("                <div class=\"row gx-4 gx-lg-5 align-items-center\">\r\n");
      out.write("                    <div class=\"col-md-6\"><img class=\"card-img-top mb-5 mb-md-0\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.productImg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"\"/></div>\r\n");
      out.write("                    <div class=\"col-md-6\">\r\n");
      out.write("                        <div class=\"small mb-1\">SKU:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.productId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("                        <h1 class=\"display-5 fw-bolder\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.productName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("                        <div class=\"fs-5 mb-5\">\r\n");
      out.write("                            <span>Start Price: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${auction.startPrice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <p class=\"lead\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("                        <!-- Hiển thị form đấu giá khi nhấn vào nút -->\r\n");
      out.write("                        <button class=\"btn btn-outline-dark flex-shrink-0\" type=\"button\" onclick=\"showBidForm()\">\r\n");
      out.write("                            <i class=\"bi-cart-fill me-1\"></i>\r\n");
      out.write("                            Đấu giá\r\n");
      out.write("                        </button>\r\n");
      out.write("\r\n");
      out.write("                        <!-- Form đấu giá -->\r\n");
      out.write("                        <form id=\"bidForm\" class=\"d-none\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bid/addMoney\" method=\"post\" onsubmit=\"addMoneyToTable(event)\">\r\n");
      out.write("                            <label for=\"amount\">Số tiền cộng thêm:</label>\r\n");
      out.write("                            <input type=\"number\" name=\"amount\" step=\"0.01\" required />\r\n");
      out.write("                            <button type=\"submit\">Thêm Tiền</button>\r\n");
      out.write("                        </form>\r\n");
      out.write("\r\n");
      out.write("                        <!-- Script để hiển thị và ẩn form đấu giá và thêm thông tin vào bảng -->\r\n");
      out.write("                        <script>\r\n");
      out.write("                            function showBidForm() {\r\n");
      out.write("                                // Hiển thị form khi nút đấu giá được nhấn\r\n");
      out.write("                                document.getElementById(\"bidForm\").classList.remove(\"d-none\");\r\n");
      out.write("                            }\r\n");
      out.write("\r\n");
      out.write("                            // Thêm thông tin vào bảng và ẩn form đấu giá\r\n");
      out.write("                            function addMoneyToTable(event) {\r\n");
      out.write("                                event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                                // Lấy giá trị số tiền từ input\r\n");
      out.write("                                var amount = parseFloat(document.getElementsByName(\"amount\")[0].value);\r\n");
      out.write("\r\n");
      out.write("                                // Lấy thông tin người đấu giá và thời gian (đã giả sử có sẵn)\r\n");
      out.write("                                var bidder = \"Người đấu giá\"; // Thay bằng thông tin người đấu giá thực tế\r\n");
      out.write("                                var time = new Date().toLocaleString(); // Lấy thời gian hiện tại\r\n");
      out.write("\r\n");
      out.write("                                // Tạo một hàng mới trong bảng và thêm vào\r\n");
      out.write("                                var table = document.getElementById(\"moneyTable\").getElementsByTagName('tbody')[0];\r\n");
      out.write("                                var newRow = table.insertRow(table.rows.length);\r\n");
      out.write("                                var cell1 = newRow.insertCell(0);\r\n");
      out.write("                                var cell2 = newRow.insertCell(1);\r\n");
      out.write("                                var cell3 = newRow.insertCell(2);\r\n");
      out.write("\r\n");
      out.write("                                cell1.innerHTML = amount.toFixed(2); // Hiển thị số tiền với 2 chữ số sau dấu thập phân\r\n");
      out.write("                                cell2.innerHTML = bidder;\r\n");
      out.write("                                cell3.innerHTML = time;\r\n");
      out.write("\r\n");
      out.write("                                // Ẩn form đấu giá sau khi thêm tiền\r\n");
      out.write("                                document.getElementById(\"bidForm\").classList.add(\"d-none\");\r\n");
      out.write("                            }\r\n");
      out.write("                        </script>\r\n");
      out.write("\r\n");
      out.write("                        <!-- Bảng hiển thị thông tin những người đấu giá-->\r\n");
      out.write("                        <table id=\"moneyTable\" class=\"table\">\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>Người đấu giá</th>\r\n");
      out.write("                                    <th>Thời gian</th>\r\n");
      out.write("                                    <th>Số tiền</th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </thead>\r\n");
      out.write("                            <tbody>\r\n");
      out.write("                                <!-- Các hàng trong bảng -->\r\n");
      out.write("                                <!-- ... -->\r\n");
      out.write("                            </tbody>\r\n");
      out.write("                        </table>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
